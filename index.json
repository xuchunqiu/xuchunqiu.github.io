[{"categories":null,"content":"BIOS 开机待屏幕点亮后按 DEL 进入 分区 软件安装路径 name version path nvidia-driver 430.4 /usr/src/nvidia-430.40/nvidia cuda 10.1 /usr/local/cuda nvcc 10.0.130 /usr/local/cuda/bin/ cuDNN 7.6.5 /usr/local/cuda/include nccl 2.5.6 /usr/local/lib docker 18.09.3 /usr/bin/docker nvidia-docker 2.0.3 /usr/bin/nvidia-docker python2 2.7.12 /usr/bin/python python3 3.5.2 /usr/bin/python3 AI Max 深度学习平台 AI Max是一款基于Kubernetes+Docker+GPU架构，定位于机器学习的上层应用，免去客户编写代码的麻烦，快速开始深度学习任务。通过容器化技术，封装了人工智能所需的系统环境和底层操作。 http://www.amaxchina.com/Product/Introduction/AIMAX ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/:0:0","tags":null,"title":"PSC HC2S（TS40 X2）软件说明","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/"},{"categories":null,"content":"平台架构 对于用户来说，唯一需要了解并使用的就是 Docker。 ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/:1:0","tags":null,"title":"PSC HC2S（TS40 X2）软件说明","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/"},{"categories":null,"content":"Docker Docker 有三个基本概念： 镜像 image 操作系统分为内核和用户空间。对于 Linux 而言，内核启动后，会挂载 root 文件系统为其提供用户空间支持。而 Docker image 就相当于是一个 root 文件系统。通常会包含特定的程序、库、环境配置等。 容器 container container 由 image 建立，但不会反向影响 image。container 的实质是拥有独立命名空间的进程，这意味这它与宿主机隔离并拥有自己的 root 文件系统、网络配置、进程空间、用户 ID 空间等。 container 可以被 建立 / 启动 / 重启 / 停止 / 删除；container 可以被保存为新的 image；container 可以直接挂载宿主机目录。 仓库 repository 用于分发 image Docker 解决的痛点 在 AI Max 中进行训练的主要原因是可以实现平台和宿主机、平台内不同用户、同用户不同项目（在该平台中被称为「任务」或「应用」）间环境的 隔离 和 快速重建。 获取 Docker 镜像 除了 AI Max 平台预置的 Docker 镜像，还可在以下位置自行下载镜像： 下载镜像 - AIMAX 机器学习镜像库 手动上传 利用 Docker 镜像快速恢复工作状态 只有交互式开发模式下可以实现「将容器保存为镜像」的功能，这意味着所有的环境变量、软件包等配置都被保存在新的镜像中，实现了环境的快速重建。 ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/:1:1","tags":null,"title":"PSC HC2S（TS40 X2）软件说明","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/"},{"categories":null,"content":"如何训练 共有两种训练方式，其入口分别在： 模型训练 - 任务训练 模型训练 - 交互式开发 它们的环境都依托于 Docker 镜像，不同之处在于前者相当于一个简化的 PBS 作业提交界面，后者更类似本机训练。 ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/:2:0","tags":null,"title":"PSC HC2S（TS40 X2）软件说明","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/"},{"categories":null,"content":"任务训练 关键设置项： 程序代码入口文件 执行器 [python3 / python / shell] 机器学习库 [tensorflow / pytorch] 工作空间 超参数调整【可添加任意数目的键值对】 资源分配 选择镜像 ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/:2:1","tags":null,"title":"PSC HC2S（TS40 X2）软件说明","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/"},{"categories":null,"content":"交互式开发 关键设置项： 执行器 [Jupyer / Desktop / JupyterLab / Terminal] 工作空间 资源分配 选择镜像 ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/:2:2","tags":null,"title":"PSC HC2S（TS40 X2）软件说明","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/"},{"categories":null,"content":"如何可视化 ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/:3:0","tags":null,"title":"PSC HC2S（TS40 X2）软件说明","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-software-infomation/"},{"categories":null,"content":"硬件信息 类型 型号 数量 规格 CPU Intel Xeon Gold 6254 @ 3.10GHz 2 Memory Samsung RDIMM ECC DDR4 2933MHz 288Pin with 32GB capacity 4 Motherboard Supermicro X11DPG-QT 1 GPU Nvidia RTX 2080 Ti 4 SSD Intel D3 S4610 Series 960GB 2.5\" NAND TLC SATA III SSD 1 HDD Western Digital Ultrastar DC HC320 8TB 3.5-inch Data Center Hard Drive 1 Power 1 2000W Network Adapter Intel Ethernet Controller 10G X550T Dual Ports 1 10GbE/5GbE/2.5GbE/1GbE/100Mb IO ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-hardware-specification/:0:0","tags":null,"title":"PSC-HC2S（TS40-X2）硬件规格","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-hardware-specification/"},{"categories":null,"content":"Back 使用 DE-9 接口的 RS-232 串行端口 USB Type-A 3.2 * 2、RJ45 Management USB Type-A 2.0 * 2 10GbE *2 VGA ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-hardware-specification/:1:0","tags":null,"title":"PSC-HC2S（TS40-X2）硬件规格","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-hardware-specification/"},{"categories":null,"content":"Top USB Type-A 3.2 * 2 ","date":"2020-11-16","objectID":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-hardware-specification/:2:0","tags":null,"title":"PSC-HC2S（TS40-X2）硬件规格","uri":"/docs/psc-hc2s/psc-hc2s-aka-ts40-x2-hardware-specification/"},{"categories":null,"content":"你好 ","date":"2021-08-21","objectID":"/about/me/:0:0","tags":null,"title":"Me","uri":"/about/me/"},{"categories":null,"content":"简介 之前使用的公共节点 Zerotier 在学校之外的打洞成功率很差，因此换用 frp 。两者工作原理类似——依赖具有公网 IP 的中心节点中转。frp 的中心节点只能自建但相应的稳定性更优。 frp 可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。frp 的可执行文件包括服务端（frps）与客户端（frpc），前者运行在具有公网 IP 的节点，后者运行在公网无法直接访问的、提供/使用服务的节点。.ini 后缀的文件记录了 frp节点间（不单是 frpc 与 frps，还包括 frpc 之间）的连接信息。 我们在阿里云上租用的 VPS 运行着 frps（连接不同 frpc 的桥梁），当前工作站上运行着 frpc（提供服务），而各位同学要在自己的电脑上同样运行 frpc（使用服务）。 快速上手 为了跑起来一个使用服务的 frpc，各位同学只需下载对应自己操作系统的 frpc，并使用正确的 *.ini 文件。 从 发布页面 下载 frpc。建议与 VPS 上运行的 frps 保持一致的版本（0.37.1）以减少出现问题的可能性。 解压压缩包并精简。frp 没有安装的概念，但下载到的压缩包是个大杂烩，可以按照下图删掉浅蓝色标注的文件/文件夹。 下载基本的 *.ini 文件。在解压目录中创建以下文件（覆盖原来的 frpc.ini）。这两个文件的内容未来修改的可能性非常低。 为什么需要多个配置文件？ 为了便于理解和维护，frp 支持对配置文件进行拆分。 实现方式是在主 .ini 文件中使用 includes 项记录需要的 子配置文件仅语义上的定义 的相对/绝对路径，并以半身逗号分隔。 特别要指出的是，即使指定的子配置文件不存在也不会影响 frp 运行。因此在 快速上手 部分即使我们没有 frpc.ini 中 includes 的 frpc_personal.ini 也能让 frpc 跑起来。 frpc.ini [common] # VPS 上 frps 的连接信息 server_addr = IP 地址 server_port = 端口号 authentication_method = token authenticate_new_work_conns = true token = 认证信息 includes = frpc_workstation_public.ini, frpc_personal.ini frpc_workstation_public.ini [AIMAX_Web] # 连接协议 type = stcp # 本机 frpc 的角色是服务使用者 role = visitor # 与工作站上 frpc 完全一致的校验信息 server_name = workstation_AIMAX_Web sk = 另一组认证信息 # 本机监听地址 bind_addr = 127.0.0.1 # 本机监听端口。指定访问 AIMAX 网页的端口号 bind_port = 8081 运行 frpc。打开本机上的终端，进入 frp 的解压目录，或者使用 Shift + 鼠标右键 的方式快速进入。 执行以下命令即可启动 frpc。 启动 frpc（Windows） ./frpc.exe -c ./frpc.ini -c 参数指定 config 文件，由于 frpc 默认会使用当前工作区下的 frpc.ini 文件。因此可以简化为： ./frpc 接下来打开本机浏览器访问 127.0.0.1:8081 即可访问到 AIMAX 的网页了： 如何停止 frpc？ 如需结束 frpc，在启动 frpc 的终端窗口内使用 Ctrl + c。 配置详解 在步骤二成功访问到 AIMAX 网页版后，需要开始编写 frpc_personal.ini 配置文件。 ","date":"2021-07-25","objectID":"/docs/psc-hc2s/remote-access-with-frp/:0:0","tags":"frp, 远程访问, 打洞, 教程","title":"使用 frp 进行远程访问","uri":"/docs/psc-hc2s/remote-access-with-frp/"},{"categories":null,"content":"原因 因为 AIMAX 本身的一些问题，导致远程访问下所有交互式开发环境都无法进入，但像创建交互式开发、上传下载私有/共享数据等操作是没问题的。 暂时的解决方案是对交互式开发里需要用到的每一个端口都生成一段 frpc 的配置（约定该文件的名称为 frpc_personal.ini ），因此需要同学们对 *.ini 文件的结构有一定概念。 ","date":"2021-07-25","objectID":"/docs/psc-hc2s/remote-access-with-frp/:1:0","tags":"frp, 远程访问, 打洞, 教程","title":"使用 frp 进行远程访问","uri":"/docs/psc-hc2s/remote-access-with-frp/"},{"categories":null,"content":"*.ini 文件结构说明 最基本的 *.ini 文件如下： [section] name=value 一个 section 对应一个服务，section 的名字完全不重要，写得自己能理解就好（可用中文）； 一个 *.ini 文件中可以有多个 section，它们之间以方括号区隔而非换行； 一个 section 下可以有多个 name,value 的对，它们之间没有先后顺序要求； name,value 对内部可以随意使用空格，name,value 对间可以随意使用换行； name,value 对内部大小写敏感； 行间注释以 ; 或 # 开头，没有行内注释。 ","date":"2021-07-25","objectID":"/docs/psc-hc2s/remote-access-with-frp/:2:0","tags":"frp, 远程访问, 打洞, 教程","title":"使用 frp 进行远程访问","uri":"/docs/psc-hc2s/remote-access-with-frp/"},{"categories":null,"content":"frpc_personal.ini 的编写 模板如下，有几个端口需要远程访问就写几个 section。section 下只有 service_name服务名、sk密码 强制修改，且严格与服务端配置完全对应。写好后保存为 frpc_personal.ini 放入解压缩文件夹中，再次启动 frpc。 需要远程访问的端口号填到哪里？ section 对应服务的远端端口号只在 frps 的配置文件中体现。 frpc_personal.ini [service1] # 固定不变 type = stcp # 固定不变 role = visitor # service_name, sk 必须严格与服务端配置完全对应 service_name = user_projector sk = 一个密码 # 本机监听地址。可改为 0.0.0.0 以允许本机和所在局域网内其它设备访问 bind_addr = 127.0.0.1 # 本机监听端口。可自定，要求不同服务的本机监听端口不能重复 bind_port = 8083 [service2] type = stcp role = visitor server_name = user_ssh sk = 另一个密码 bind_addr = 127.0.0.1 bind_port = 8084 根据 frpc 日志故障排除 注意必须先在终端中启动 frpc，才能通过浏览器（或其它软件）访问到 frpc 提供的远程页面。启动 frpc 的终端会输出日志。下图展示了如何根据日志信息分析可能的问题。其中3、4是要访问对应服务才能看出的错误。 ","date":"2021-07-25","objectID":"/docs/psc-hc2s/remote-access-with-frp/:3:0","tags":"frp, 远程访问, 打洞, 教程","title":"使用 frp 进行远程访问","uri":"/docs/psc-hc2s/remote-access-with-frp/"},{"categories":null,"content":"影响因子 Impact Factor 是美国科学情报研究所（ISI）的 期刊引证报告（JCR）中的一项数据。指的是某一期刊的文章在特定年份或时期被引用的频率，是衡量 学术期刊 影响力的一个重要指标。由美国科学情报研究所创始人尤金·加菲得在 1960 年代创立，其后为 文献计量学 的发展带来了一系列重大革新。 自 1975 年以来，每年定期发布于《期刊引证报告》（JCR）。 影响指数即某期刊前两年（S, T）发表的论文在统计当年（U）的被引用总次数 X（前两年总被引次数）除以该期刊在前两年（S, T）内发表的论文总数 Y（前两年总发文量）。这是一个国际上通行的期刊评价指标。公式为： $$I F_{U}=\\frac{X_{(S, T)}}{Y_{(S, T)}}$$ SCI 科学引文索引 Science Citation Index 是由美国 科学资讯研究所（Institute for Scientific Information，简称ISI）于 1960 年上线投入使用的一部期刊文献检索工具（点我使用），其出版形式包括印刷版期刊和光盘版及联机数据库。科学引文索引由 科睿唯安 公司（Clarivate Analytics）运营。 收录范围：自然科学的基础研究领域 ","date":"2020-11-11","objectID":"/what-is-sci/:0:0","tags":null,"title":"什么是 SCI","uri":"/what-is-sci/"},{"categories":null,"content":"Web of Science™ 科睿唯安当前涉及的领域包括：科学与学术研究、生命科学与制药、专利与研发创新、产业法规与标准、网域名称管理、商标检索与保护。Web of Science™ 是其在 科学与学术研究 领域提供的「最受信任的、独立于出版商的全球引文数据库（the world’s most trusted publisher-independent global citation database）」；而 Journal Citation Reports 是其在 科学与学术研究 领域 依托于 Web of Science 的在研究分析与评估方面的产品。它早先的名称是 Web of Knowledge Web of Science™ 是一个基于 Web 而构建的动态的数字研究环境，通过强大的检索技术和基于内容的连接能力，将高质量的信息资源、独特的信息分析工具和专业的信息管理软件无缝地整合在一起，兼具知识的检索、提取、分析、评价、管理与发表等多项功能1。在内容上， 以 Web of Science™ 核心合集（著名的三大引文索引 Science Citation Index Expanded®, Social Science Citation Index®, Arts \u0026 Humanities Citation Index®）为核心 ，凭藉独特的引文检索机制和强大的交叉检索功能，有效地整合了： 学术期刊（Web of Science™ 核心合集） 技术专利（Derwent Innovations Index） 化学反应（Chemistry） 研究基金（eSearch） Internet资源（Current Web Contents） 学术分析与评价工具（Essential Science Indicators） 学术社区（HighlyCited.com） 及其它重要的学术信息资源，提供了自然科学、工程技术、生物医学、社会科学、艺术与人文等多个领域中高质量、可信赖的学术信息。Web of Science™ 平台上所有数据库中的信息都是经过精心挑选的，它只收录那些对研究者有用的出版物、网站内容和其它学术资源。这些学术信息是由许多不同的媒介以不同的格式提供的。这些媒介形式包括期刊（印刷版或电子版）、书籍和会议录、网站内容，以及 ISI 外部的数据库。 ","date":"2020-11-11","objectID":"/what-is-sci/:1:0","tags":null,"title":"什么是 SCI","uri":"/what-is-sci/"},{"categories":null,"content":"Web of Science Core Collection™ 核心合辑2 遴选标准：zh-cn、zh-tw 重点摘录：普通期刊 →（编辑品质评估成功）→ ESCI →（编辑影响力评估成功）→ SCIE/SSCI/AHCI，其中箭头也可反向——即SCIE也可掉回ESCI甚至普通期刊 拥有来自全球 18,000 多种高影响力的学术期刊、180,000 多种会议论文、以及 80,000 多种学术书籍的多学科研究资料。通过百年以上的丰富文献资源以及超过十亿的引文网络，您可以在任何领域放心地检索并发现完整的引文网络。 Science Citation Index Expanded™ (SCIE) 涵盖 178 个学科的 9300 多种主流期刊。— 1900 年至今。 Social Sciences Citation Index™ (SSCI) 涵盖 58 个社会科学学科的 3,400 多种期刊，以及从 3,500 种世界顶尖期刊中筛选的内容。— 1900 年至今。 Arts \u0026 Humanities Citation Index™ (A\u0026HCI) 超过 1,800 种艺术与人文领域的期刊，以及从 250 多种自然科学和社会科学期刊中筛选的内容。— 1975 年至今。 Emerging Sources Citation Index™ (ESCI) 包含了 5,000 多种期刊的 ESCI，旨在捕捉高影响力文献之外的自然科学、社会科学和人文学科领域的趋势与发展。科睿唯安编辑团队所遴选并评审的期刊通常会在全球得到相关领域的意见领袖、基金资助和评估机构的重视。 Book Citation Index™ (BKCI) 索引了超过 80,000 种编辑精选的图书，且每年增加 10,000 种新书。— 2005 年至今。 Conference Proceedings Citation Index (CPCI) 该多学科索引能让人们以最快的方式从 180,000 多种会议论文集中获得最前沿、有影响力的研究。— 1990 年至今。 ","date":"2020-11-11","objectID":"/what-is-sci/:1:1","tags":null,"title":"什么是 SCI","uri":"/what-is-sci/"},{"categories":null,"content":"区域性资料库3 Chinese Science Citation Database™（中国科学引文资料库） 科睿唯安与中国科学院合作，将中国科学引文资料库（Chinese Science Citation Database™）嵌入到 Web of Science™ 平台中，让全世界更多的科学研究人员瞭解中国的科学研究发展及动态。作为 Web of Science™ 平台中首个非英文产品，该资料库收录了约 1,100 种中国出版的科学与工程核心期刊，共有近 400 万条论文记录，1,700 万条引文记录。 Russian Science Citation Index™ KCI Korean Journal Database™ SciELO Citation Index™ ","date":"2020-11-11","objectID":"/what-is-sci/:1:2","tags":null,"title":"什么是 SCI","uri":"/what-is-sci/"},{"categories":null,"content":"Journal Citation Reports™ 期刊引证报告4 全球每年有上千万的学术研究著作发表，其中的文献引用更是巨量。引文所串起的连结都具有意义，因为这是研究学者悉心阐述其研究发现的轨迹，而每一本他们所引用与选择的期刊也代表著他们重视该期刊为自己的研究发现所带来的价值。Journal Citation Reports™ (JCR) 汇总了 Web of Science™ 核心合辑期刊的引文数据，呈现了庞大的学术网络彼此之间的关联与研究脉络。 最新版的 JCR 显著加强了对 Journal Impact Factor™ (JIF) 和其他指标的透明度，增加了论文层面的分析和解读，为用户全面瞭解期刊表现，提供了新的分析角度和更加丰富而详尽的资讯。这些新的分析角度更好地利用了引文资料库中的资料和指标，能协助研究人员、出版商、期刊编辑、图书馆员和基金资助者进一步地瞭解期刊对各种用户的核心价值。 每本被 JCR 收录的期刊均符合 Web of Science 核心合辑的期刊遴选标准，JCR仅显示被 Science Citation Index Expanded™ (SCIE) 和 Social Sciences Citation Index™ (SSCI) 索引的期刊，以便您可以快速找到自然科学和社会科学领域最具影响力的期刊清单。 ","date":"2020-11-11","objectID":"/what-is-sci/:2:0","tags":null,"title":"什么是 SCI","uri":"/what-is-sci/"},{"categories":null,"content":"指标5 期刊引证报告透过量化引用文献的统计资讯，于每年度发表下列评比指标并予以排名： 年度影响因子（Impact Factor）：透过该期刊“前两年”所发表文章总数，与“前两年”的文章在“该年度”被引用的总次数计算而得出。当影响因子的数字越高，代表此期刊的文章被引用次数越多，即此期刊在学术界的影响力越大。一般而言期刊的影响因子越高，则代表此期刊的学术品质越佳。值得注意的是，影响因子虽然是期刊本身评价的指标，但不能作为该期刊中单篇论文影响力的依据、或是论文作者的评价。 5年影响因子（5-Year Impact Factor）：透过该期刊于“前五年”所发表文章总数，与“前五年”的文章在“该年度”被引用的总次数计算而得出。此指标类似于年度影响因子，但计算时间较长，可以代表该期刊在长时间下的影响能力。 立即指数（Immediacy Index）：为该期刊当年度所出版文章的平均被引用次数。此指标可代表该期刊在当年度影响力的大小。 被引半衰期（Cited Half-Life）：该期刊的总被引用次数衰退一半所需要的年数（此数据只有在总被引次数大于100时提供）。此指标可代表该期刊文章影响力衰退的速度，其数值越大则代表影响力持续较久，数值越小则代表影响力较小。通常社会科学领域期刊的被引用半衰期相较来的长。 总被引用次数（Total Cites）：为该期刊自从被收录进期刊引证报告后的总被引用次数。 文章总数（Current Articles）：为该期刊自从被收录进期刊引证报告后的文章总数。 Engineering Index 工程索引 是世界著名的检索工具，由美国工程信息公司编辑出版发行，该公司始建于 1884 年，是世界上最大的工程信息提供者之一，早期出版印刷版、缩微版等信息产品，1969 年开始提供 EI Compendex 数据库服务。EI Compendex：对应的印刷版检索刊为《工程索引》，是最常用的文摘数据库之一，侧重于工程技术领域的文献的报道。1992 年开始收录中国期刊，1998 年清华大学建立了 EI 中国镜像站。 EI数据来源于 3 千种工程类期刊以及 9 万多种会议录，每周更新6。目前主要有三个版本： Ei Compendex 光盘数据库 Ei Compendex Web数据库 Engineering Village 2 工程信息村 其中 Ei Village 2 包括： Compendex Engineering Index Backfile 工程索引回放文件 Inspec Inspec Archive NTIS 国家医学研究所 Referex Engineering ENGnetBASE Patents from USPTO and esp@cenet GlobalSpec Scirus EEVL LexisNexis News 参考文献 Impact Factor、引用次數與學術評鑑相關問題懶人包 WoS 與 WOK、JCR、ESI 之間的關係？： SCI 與 SCIE 的區別：1. SCI为光盘形式，现已停止发行发布；后者为网页服务 2. 两者评选标准相同 如何得知期刊是否收錄於 Web of Science 資料庫？：WOS’s Master Journal List 如何得知某期刊是否被EI收錄？：Ei Village(Source title) or 下载（定期更新的）Ei Compendex 收录清单 如何查詢期刊之Impact Factor 科睿唯安网站上关于 Web of Science™ 核心合集的遴选标准 ↩︎ 科睿唯安网站上关于 Web of Science™ 核心合辑的介绍 ↩︎ 科睿唯安网站上关于 Web of Science™ 核心合辑中区域性资料库的介绍 ↩︎ 科睿唯安网站上关于期刊引证报告的介绍 ↩︎ 维基百科条目「期刊引证报告」中关于指标的解释 ↩︎ 第三方网站「EI学术」上对EI的简介 ↩︎ ","date":"2020-11-11","objectID":"/what-is-sci/:2:1","tags":null,"title":"什么是 SCI","uri":"/what-is-sci/"},{"categories":null,"content":"稳步推进","date":"2020-11-10","objectID":"/blog-construction-progress/","tags":null,"title":"博客当前施工进展","uri":"/blog-construction-progress/"},{"categories":null,"content":"静态网站生成器 static site generator / web template system 可选包括 Jekyll、Hexo、Pelican、Gridea、Hugo …… 前几日看到新闻说 KDE.org 迁移到 Hugo，所以我现在有些倾向于它。 ","date":"2020-11-10","objectID":"/blog-construction-progress/:0:0","tags":null,"title":"博客当前施工进展","uri":"/blog-construction-progress/"},{"categories":null,"content":"践行《Web 内容无障碍指南》 对于一个没有前端开发经验的人来说自己从头做起未免步子迈太大，找个无障碍优化做得比较好的 Hugo 主题 才是个现实的解决办法。根据 accessible/accessibility 标签筛选出了以下博客主题： Zzo、Color Your World、Terrassa、Zen、Cupper、Accessible Minimalism 从 W3C 列出的 Web Accessibility Evaluation Tools List 中选了一个在线测试工具 WebAccessibility 进行测试，测试结果如下（测试进行于2020年11月9日，测试结果仅能代表此刻的情况）。 theme name test url number of violations compliance score personal evaluation Zzo https://themes.gohugo.io/theme/hugo-theme-zzo/ 27 85% garish Color Your World https://themes.gohugo.io/theme/hugo-theme-color-your-world/ 0 91% Terrassa https://themes.gohugo.io/theme/hugo-terrassa-theme/ 6 87% comfortable Zen https://themes.gohugo.io/theme/hugo-theme-zen/ 1 88% basic black and white blog style Cupper https://themes.gohugo.io/theme/cupper-hugo-theme/ 0 91% black and white but too sharp Accessible Minimalism https://themes.gohugo.io/theme/accessible-minimalism-hugo-theme/ 0 91% too crude 可是老实说上边这些我都不 100% 合我心意，就 Demo 的展示内容来说像走入了两种极端：极简或是花里胡哨。在 blog 标签下发现了这个功能和质感都恰到好处为 Eureka 的主题，虽然没有 accessible 标签但 WebAccessibility 合规成绩 92%，更重要的是开发者是中文母语者——这个主题的中文显示效果不会差。 ","date":"2020-11-10","objectID":"/blog-construction-progress/:1:0","tags":null,"title":"博客当前施工进展","uri":"/blog-construction-progress/"},{"categories":null,"content":"Hugo 101 系统环境：Windows 10 终端：Windows PowerShell ","date":"2020-11-10","objectID":"/blog-construction-progress/:2:0","tags":null,"title":"博客当前施工进展","uri":"/blog-construction-progress/"},{"categories":null,"content":"安装 https://gohugo.io/getting-started/installing/ 按照官方文档中的 Quick Install 部分，在 releases 页下载 hugo_0.78.1_Windows-64bit.zip 解压后的 hugo.exe 放入本机的某一路径如 D:\\Hugo\\hugo_0.78.1 。此时就能执行 Hugo 的命令了，可通过如下命令测试： D:\\Hugo\\hugo_0.78.1\\hugo.exe help # 输出 Hugo 的命令手册 # 为了省略前面的路径，接下来需要添加环境变量 将路径 D:\\Hugo\\hugo_0.78.1 添加入用户变量 PATH ，而后重启使其生效。接下来使用如下命令测试： hugo help # 输出 Hugo 的命令手册 ","date":"2020-11-10","objectID":"/blog-construction-progress/:2:1","tags":null,"title":"博客当前施工进展","uri":"/blog-construction-progress/"},{"categories":null,"content":"使用 hugo # 将当前工作目录作为输入，根据该路径下的 config 文件/文件夹生成静态网站内容至 .\\public # config 文件或是 config 文件夹是并列的两种配置方式，前者可以通过用 Hugo 创建站点来生成 hugo new site \u003cyour_site_name\u003e tree . └── \u003cyour_site_name\u003e ├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts ├── static └── themes # 接下来对于站点 \u003cyour_site_name\u003e 的操作都要在其根目录下进行 cd \u003cyour_site_name\u003e hugo new content/new_post.md # 创建新文章 hugo server # 生成一个本地测试站点，注意：所有文件头为 draft: true 的 markdown 文件都不会被处理与显示； 应用主题 https://www.wangchucheng.com/zh/docs/eureka/getting-started/ 进入站点根目录，初始化一个 Hugo Module，名字可以自定义，以后永远不会用到。然后从 GitHub 下载 Eureka 主题的 config 文件夹 到站点根目录，修改 \u003cyour_site_name\u003e/config/_default/config.toml 的配置，然后删除 \u003cyour_site_name\u003e/config.toml 。接下来就可以生成测试站点了。 客制化 ","date":"2020-11-10","objectID":"/blog-construction-progress/:2:2","tags":null,"title":"博客当前施工进展","uri":"/blog-construction-progress/"},{"categories":null,"content":"部署 https://github.com/marketplace/actions/hugo-to-gh-pages https://gist.github.com/lisez/41cebe4eb9190a5c5e879fee5933beb1 处理 Google Search Console 验证 暂时无法通过 Google Analytics（分析） 的方式验证所有权，加上没有添加独立域名，导致唯一可用的验证方式是 HTML 标记 —— 向网站根目录上传一个 Google 提供的 HTML 文件并一直保持。 尝试单独把这个 html 文件 commit 到 xuchunqiu/xuchunqiu.github.io，顺利通过验证；然而上面 GitHub Action 部署过程中默认的 --cleanDestinationDir 运行参数会使得仓库 xuchunqiu/xuchunqiu.github.io 中的原始内容在更新后被完全清空（包括单独 commit 的 HTML 文件）。 解决思路有二：修改 GitHub Action、让 Hugo 生成静态网页时把这个 HTML 加进去。 后者在 Hugo 的 文档 中有特别提到，文件夹 static 适合用来存储 Google Search Console 的验证用 HTML： static: Stores all the static content: images, CSS, JavaScript, etc. When Hugo builds your site, all assets inside your static directory are copied over as-is. A good example of using the static folder is for verifying site ownership on Google Search Console, where you want Hugo to copy over a complete HTML file without modifying its content. ","date":"2020-11-10","objectID":"/blog-construction-progress/:2:3","tags":null,"title":"博客当前施工进展","uri":"/blog-construction-progress/"},{"categories":null,"content":"TODO 寻找国内友好的图床 添加 Gitalk 评论区 熟悉发布博文到 GitHub Pages 的工作流 统一 commit 样式（约定式提交？） 践行 《中文排版方案指北》 迁移 Dropbox 内的笔记 迁移 Notion 内的知识库 ","date":"2020-11-10","objectID":"/blog-construction-progress/:3:0","tags":null,"title":"博客当前施工进展","uri":"/blog-construction-progress/"},{"categories":null,"content":"安装 appimage 格式深度截图并加入到启动台","date":"2019-02-25","objectID":"/install-deepin-screenshot-on-ubuntu/","tags":null,"title":"如何在 Ubuntu 上安装深度截图","uri":"/install-deepin-screenshot-on-ubuntu/"},{"categories":null,"content":"Update 深度截图目前已有 官方介绍、使用说明，但依然没有提供从深度商店外安装深度截图的教程。 appimage 格式深度截图的下载地址已经失效，但依然可以从互联网档案馆上 下载（35.7 MB）。 ","date":"2019-02-25","objectID":"/install-deepin-screenshot-on-ubuntu/:0:0","tags":null,"title":"如何在 Ubuntu 上安装深度截图","uri":"/install-deepin-screenshot-on-ubuntu/"},{"categories":null,"content":"1. 下载深度截图 从以下地址下载第三方打包的深度截图： ~~https://github.com/ZetaoYang/deepin-app-package/releases~~ ","date":"2019-02-25","objectID":"/install-deepin-screenshot-on-ubuntu/:1:0","tags":null,"title":"如何在 Ubuntu 上安装深度截图","uri":"/install-deepin-screenshot-on-ubuntu/"},{"categories":null,"content":"2. 运行 首先添加执行权限 chmod +x ./Deepin_Screenshot-x86_64.AppImage 使用方法： GUI： 文件管理器双击 CLI：~/Downloads/Deepin_Screenshot_4.0.10.4-x86_64.AppImage ","date":"2019-02-25","objectID":"/install-deepin-screenshot-on-ubuntu/:2:0","tags":null,"title":"如何在 Ubuntu 上安装深度截图","uri":"/install-deepin-screenshot-on-ubuntu/"},{"categories":null,"content":"3. 让深度截图在 Ubuntu 启动台显示 ","date":"2019-02-25","objectID":"/install-deepin-screenshot-on-ubuntu/:3:0","tags":null,"title":"如何在 Ubuntu 上安装深度截图","uri":"/install-deepin-screenshot-on-ubuntu/"},{"categories":null,"content":"3.1 AppImageLauncher 法 AppImageLauncher 顾名思义是一个可以快速把 appimage 软件加入启动台的工具。只需要从 https://github.com/TheAssassin/AppImageLauncher/releases 下载的合适版本，然后执行以下命令安装 sudo dpkg -i ~/Downloads/appimagelauncher_1.0.3-travis508.git20190223.0c6d768_amd64.deb 理论上再次双击之前的 Deepin_Screenshot_4.0.10.4-x86_64.AppImage 就可以初始化 AppImageLauncher，进而可以把 Deepin_Screenshot_4.0.10.4-x86_64.AppImage 显示在 LaunchPad。不幸的是我双击后遇到闪退。 ","date":"2019-02-25","objectID":"/install-deepin-screenshot-on-ubuntu/:3:1","tags":null,"title":"如何在 Ubuntu 上安装深度截图","uri":"/install-deepin-screenshot-on-ubuntu/"},{"categories":null,"content":"3.2 手动法 此方法适用于所有只能命令行启动的程序，只需要在 /usr/share/applications/ 下添加一个配置文件就能让程序显示在 Ubuntu 启动台上。但在开始之前，为了美观还需要一个合适的图标，我是从 http://appstore.deepin.com/data/v1/workaround/metadata/deepin-screenshot/meta/icons/deepin-screenshot.svg 下载图标，然后用在线工具转为PNG格式备用。 按照 文件系统层次结构标准 为深度截图在 /opt 下创建目录： sudo mkdir /opt/deepinscreenshot 然后把 appimage 程序和 PNG 格式的图标复制进去： sudo cp ~/Downloads/Deepin_Screenshot_4.0.10.4-x86_64.AppImage /opt/deepinscreenshot/ sudo cp ~/Downloads/deepin-screenshot-24px.png /opt/deepinscreenshot/ 注入灵魂 注册应用程序到启动台： sudo vim /usr/share/applications/biubiubiu.desktop biubiubiu.desktop 的内容示例 [Desktop Entry] Name=biubiubiu Name[zh_CN]=深度截图 Exec=/opt/deepinscreenshot/Deepin_Screenshot_4.0.10.4-x86_64.AppImage Icon=/opt/deepinscreenshot/deepin-screenshot-24px.png Terminal=false X-MultipleArgs=false Type=Application Encoding=UTF-8 Categories=Application; StartupNotify=false 然后就可以在 LaunchPad 看到图标了，鼠标拖拽即可固定到 dock 栏。 ","date":"2019-02-25","objectID":"/install-deepin-screenshot-on-ubuntu/:3:2","tags":null,"title":"如何在 Ubuntu 上安装深度截图","uri":"/install-deepin-screenshot-on-ubuntu/"},{"categories":null,"content":"手动安装 deepin 商店版 TIM 的过程记录","date":"2019-02-25","objectID":"/install-qq-on-ubuntu/","tags":null,"title":"如何在 Ubuntu 上安装 QQ","uri":"/install-qq-on-ubuntu/"},{"categories":null,"content":"Update 深度的 维基页面 现在已经列出了直接使用 apt 命令安装 QQ轻聊版、QQ 标准版 的方法。 ","date":"2019-02-25","objectID":"/install-qq-on-ubuntu/:0:0","tags":null,"title":"如何在 Ubuntu 上安装 QQ","uri":"/install-qq-on-ubuntu/"},{"categories":null,"content":"1. 安装 Deepin wine 环境 # 下载 git clone https://gitee.com/wszqkzqk/deepin-wine-for-ubuntu.git # 执行安装脚本 sudo sh ./deepin-wine-for-ubuntu/install.sh ","date":"2019-02-25","objectID":"/install-qq-on-ubuntu/:1:0","tags":null,"title":"如何在 Ubuntu 上安装 QQ","uri":"/install-qq-on-ubuntu/"},{"categories":null,"content":"2. 安装 Deepin 版 TIM 安装包 # 下载 wget http://packages.deepin.com/deepin/pool/non-free/d/deepin.com.qq.office/deepin.com.qq.office_2.0.0deepin4_i386.deb # 解包安装 sudo dpkg -i ./Downloads/deepin.com.qq.office_2.0.0deepin4_i386.deb # 在 Ubuntu 的 Lauchpad 应已出现 TIM 的图标，单击启动、登录，应该就可以正常使用了 ","date":"2019-02-25","objectID":"/install-qq-on-ubuntu/:2:0","tags":null,"title":"如何在 Ubuntu 上安装 QQ","uri":"/install-qq-on-ubuntu/"},{"categories":null,"content":"3. 可选：解决在高分屏 GUI 过小的问题 使用如下命令调出 wine 的配置页面： WINEPREFIX=~/.deepinwine/Deepin-TIM/ deepin-wine winecfg 在 Graphics 选项卡中往大调整 Screen resolution 的值，调好后重新运行 TIM 即可看到效果。 ","date":"2019-02-25","objectID":"/install-qq-on-ubuntu/:3:0","tags":null,"title":"如何在 Ubuntu 上安装 QQ","uri":"/install-qq-on-ubuntu/"}]